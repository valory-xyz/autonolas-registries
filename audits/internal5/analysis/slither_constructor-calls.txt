'solc --version' running
'solc ./StakingVerifier-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-registries/audits/internal5/analysis/contracts' running
'solc --version' running
'solc ./StakingNativeToken-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-registries/audits/internal5/analysis/contracts' running
'solc --version' running
'solc ./StakingBase-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-registries/audits/internal5/analysis/contracts' running
'solc --version' running
'solc ./StakingFactory-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-registries/audits/internal5/analysis/contracts' running
Compilation warnings/errors on ./StakingFactory-flatten.sol:
Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.
  --> StakingFactory-flatten.sol:23:1:
   |
23 | contract StakingProxy {
   | ^ (Relevant source part starts here and spans across multiple lines).
Note: The payable fallback function is defined here.
  --> StakingFactory-flatten.sol:42:5:
   |
42 |     fallback() external payable {
   |     ^ (Relevant source part starts here and spans across multiple lines).


'solc --version' running
'solc ./StakingProxy-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-registries/audits/internal5/analysis/contracts' running
Compilation warnings/errors on ./StakingProxy-flatten.sol:
Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.
  --> StakingProxy-flatten.sol:23:1:
   |
23 | contract StakingProxy {
   | ^ (Relevant source part starts here and spans across multiple lines).
Note: The payable fallback function is defined here.
  --> StakingProxy-flatten.sol:42:5:
   |
42 |     fallback() external payable {
   |     ^ (Relevant source part starts here and spans across multiple lines).


'solc --version' running
'solc ./StakingActivityChecker-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-registries/audits/internal5/analysis/contracts' running
'solc --version' running
'solc ./StakingToken-flatten.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/home/andrey/valory/autonolas-registries/audits/internal5/analysis/contracts' running
INFO:Printers:
###############################
####### StakingVerifier #######
###############################

## Constructor Call Sequence
	- StakingVerifier

## Constructor Definitions

### StakingVerifier

     constructor(address _olas, uint256 _rewardsPerSecondLimit) {
        // Zero address check
        if (_olas == address(0)) {
            revert ZeroAddress();
        }

        // Zero value check
        if (_rewardsPerSecondLimit == 0) {
            revert ZeroValue();
        }

        owner = msg.sender;
        olas = _olas;
        rewardsPerSecondLimit = _rewardsPerSecondLimit;
    }

INFO:Printers:
######################
####### ERC721 #######
######################

## Constructor Call Sequence
	- ERC721

## Constructor Definitions

### ERC721

     constructor(string memory _name, string memory _symbol) {
        name = _name;
        symbol = _symbol;
    }

INFO:Printers:
######################
####### ERC721 #######
######################

## Constructor Call Sequence
	- ERC721

## Constructor Definitions

### ERC721

     constructor(string memory _name, string memory _symbol) {
        name = _name;
        symbol = _symbol;
    }

INFO:Printers:
############################
####### StakingProxy #######
############################

## Constructor Call Sequence
	- StakingProxy

## Constructor Definitions

### StakingProxy

     constructor(address implementation) {
        // Check for the zero address, since the delegatecall works even with the zero one
        if (implementation == address(0)) {
            revert ZeroImplementationAddress();
        }

        // Store the service staking implementation address
        assembly {
            sstore(SERVICE_STAKING_PROXY, implementation)
        }
    }

##############################
####### StakingFactory #######
##############################

## Constructor Call Sequence
	- StakingFactory

## Constructor Definitions

### StakingFactory

     constructor(address _verifier) {
        owner = msg.sender;
        verifier = _verifier;
    }

INFO:Printers:
############################
####### StakingProxy #######
############################

## Constructor Call Sequence
	- StakingProxy

## Constructor Definitions

### StakingProxy

     constructor(address implementation) {
        // Check for the zero address, since the delegatecall works even with the zero one
        if (implementation == address(0)) {
            revert ZeroImplementationAddress();
        }

        // Store the service staking implementation address
        assembly {
            sstore(SERVICE_STAKING_PROXY, implementation)
        }
    }

INFO:Printers:
######################################
####### StakingActivityChecker #######
######################################

## Constructor Call Sequence
	- StakingActivityChecker

## Constructor Definitions

### StakingActivityChecker

     constructor(uint256 _livenessRatio) {
        // Check for zero value
        if (_livenessRatio == 0) {
            revert ZeroValue();
        }

        livenessRatio = _livenessRatio;
    }

INFO:Printers:
######################
####### ERC721 #######
######################

## Constructor Call Sequence
	- ERC721

## Constructor Definitions

### ERC721

     constructor(string memory _name, string memory _symbol) {
        name = _name;
        symbol = _symbol;
    }

INFO:Slither:. analyzed (27 contracts)
