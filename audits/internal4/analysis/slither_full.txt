Notes: False positive. _withdraw is internal function under control above logic
INFO:Detectors:
ServiceStakingNativeToken._withdraw(address,uint256) (ServiceStakingNativeToken-flatten.sol#899-909) sends eth to arbitrary user
	Dangerous calls:
	- (result) = to.call{value: amount}() (ServiceStakingNativeToken-flatten.sol#905)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Notes: False positive. Non-readonly-reentrancy
INFO:Detectors:
Potential vulnerable to readonly-reentrancy function (if read in other function) ServiceStakingBase.calculateServiceStakingReward(uint256) (ServiceStakingNativeToken-flatten.sol#850-879):
	State variables read that were written after the external call(s):
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at sInfo = mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#852)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at reward = sInfo.reward (ServiceStakingNativeToken-flatten.sol#853)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at sInfo.tsStart == 0 (ServiceStakingNativeToken-flatten.sol#856)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at revert ServiceNotStaked(uint256)(serviceId) (ServiceStakingNativeToken-flatten.sol#857)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at END_IF (ServiceStakingNativeToken-flatten.sol#856-858)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at NEW VARIABLE lastAvailableRewards (ServiceStakingNativeToken-flatten.sol#861)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at NEW VARIABLE numServices (ServiceStakingNativeToken-flatten.sol#861)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at NEW VARIABLE totalRewards (ServiceStakingNativeToken-flatten.sol#861)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at NEW VARIABLE eligibleServiceIds (ServiceStakingNativeToken-flatten.sol#861)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at NEW VARIABLE eligibleServiceRewards (ServiceStakingNativeToken-flatten.sol#862)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at (lastAvailableRewards,numServices,totalRewards,eligibleServiceIds,eligibleServiceRewards) = _calculateStakingRewards() (ServiceStakingNativeToken-flatten.sol#861-862)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at numServices > 0 (ServiceStakingNativeToken-flatten.sol#865)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at BEGIN_LOOP (ServiceStakingNativeToken-flatten.sol#867-877)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at END_LOOP (ServiceStakingNativeToken-flatten.sol#867-877)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at i = 0 (ServiceStakingNativeToken-flatten.sol#867)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at i < eligibleServiceIds.length (ServiceStakingNativeToken-flatten.sol#867)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at eligibleServiceIds[i] == serviceId (ServiceStakingNativeToken-flatten.sol#868)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at totalRewards > lastAvailableRewards (ServiceStakingNativeToken-flatten.sol#870)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at reward += (eligibleServiceRewards[i] * lastAvailableRewards) / totalRewards (ServiceStakingNativeToken-flatten.sol#871)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at reward += eligibleServiceRewards[i] (ServiceStakingNativeToken-flatten.sol#873)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at END_IF (ServiceStakingNativeToken-flatten.sol#870-874)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at BREAK (ServiceStakingNativeToken-flatten.sol#875)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at END_IF (ServiceStakingNativeToken-flatten.sol#868-876)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at ++ i (ServiceStakingNativeToken-flatten.sol#867)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) was read at END_IF (ServiceStakingNativeToken-flatten.sol#865-878)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at (lastAvailableRewards,numServices,totalRewards,eligibleServiceIds,eligibleServiceRewards) = _calculateStakingRewards() (ServiceStakingNativeToken-flatten.sol#861-862)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at numServices > 0 (ServiceStakingNativeToken-flatten.sol#865)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at BEGIN_LOOP (ServiceStakingNativeToken-flatten.sol#867-877)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at END_LOOP (ServiceStakingNativeToken-flatten.sol#867-877)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at i = 0 (ServiceStakingNativeToken-flatten.sol#867)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at i < eligibleServiceIds.length (ServiceStakingNativeToken-flatten.sol#867)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at eligibleServiceIds[i] == serviceId (ServiceStakingNativeToken-flatten.sol#868)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at totalRewards > lastAvailableRewards (ServiceStakingNativeToken-flatten.sol#870)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at reward += (eligibleServiceRewards[i] * lastAvailableRewards) / totalRewards (ServiceStakingNativeToken-flatten.sol#871)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at reward += eligibleServiceRewards[i] (ServiceStakingNativeToken-flatten.sol#873)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at END_IF (ServiceStakingNativeToken-flatten.sol#870-874)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at BREAK (ServiceStakingNativeToken-flatten.sol#875)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at END_IF (ServiceStakingNativeToken-flatten.sol#868-876)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at ++ i (ServiceStakingNativeToken-flatten.sol#867)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) was read at END_IF (ServiceStakingNativeToken-flatten.sol#865-878)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
Reference: https://github.com/pessimistic-io/slitherin/blob/master/docs/readonly_reentrancy.md

Notes: False positive. Code by design.
INFO:Detectors:
ServiceStakingBase.calculateServiceStakingReward(uint256) (ServiceStakingNativeToken-flatten.sol#850-879) uses a dangerous strict equality:
	- sInfo.tsStart == 0 (ServiceStakingNativeToken-flatten.sol#856)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Notes: False positive. IService(serviceRegistry).safeTransferFrom non-reentrancy if erviceRegistry is trusted contract.
INFO:Detectors:
Reentrancy in ServiceStakingBase.stake(uint256) (ServiceStakingNativeToken-flatten.sol#569-636):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(msg.sender,address(this),serviceId) (ServiceStakingNativeToken-flatten.sol#622)
	State variables written after the call(s):
	- setServiceIds.push(serviceId) (ServiceStakingNativeToken-flatten.sol#633)
	ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) can be used in cross function reentrancies:
	- ServiceStakingBase._calculateStakingRewards() (ServiceStakingNativeToken-flatten.sol#646-717)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506)
	- ServiceStakingBase.stake(uint256) (ServiceStakingNativeToken-flatten.sol#569-636)
	- ServiceStakingBase.unstake(uint256) (ServiceStakingNativeToken-flatten.sol#809-845)
Reentrancy in ServiceStakingBase.unstake(uint256) (ServiceStakingNativeToken-flatten.sol#809-845):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(address(this),msg.sender,serviceId) (ServiceStakingNativeToken-flatten.sol#829)
	State variables written after the call(s):
	- delete mapServiceInfo[serviceId] (ServiceStakingNativeToken-flatten.sol#838)
	ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504) can be used in cross function reentrancies:
	- ServiceStakingBase._calculateStakingRewards() (ServiceStakingNativeToken-flatten.sol#646-717)
	- ServiceStakingBase.calculateServiceStakingReward(uint256) (ServiceStakingNativeToken-flatten.sol#850-879)
	- ServiceStakingBase.checkpoint() (ServiceStakingNativeToken-flatten.sol#726-805)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingNativeToken-flatten.sol#504)
	- ServiceStakingBase.stake(uint256) (ServiceStakingNativeToken-flatten.sol#569-636)
	- ServiceStakingBase.unstake(uint256) (ServiceStakingNativeToken-flatten.sol#809-845)
	- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingNativeToken-flatten.sol#841)
	ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) can be used in cross function reentrancies:
	- ServiceStakingBase._calculateStakingRewards() (ServiceStakingNativeToken-flatten.sol#646-717)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506)
	- ServiceStakingBase.stake(uint256) (ServiceStakingNativeToken-flatten.sol#569-636)
	- ServiceStakingBase.unstake(uint256) (ServiceStakingNativeToken-flatten.sol#809-845)
	- setServiceIds.pop() (ServiceStakingNativeToken-flatten.sol#842)
	ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506) can be used in cross function reentrancies:
	- ServiceStakingBase._calculateStakingRewards() (ServiceStakingNativeToken-flatten.sol#646-717)
	- ServiceStakingBase.setServiceIds (ServiceStakingNativeToken-flatten.sol#506)
	- ServiceStakingBase.stake(uint256) (ServiceStakingNativeToken-flatten.sol#569-636)
	- ServiceStakingBase.unstake(uint256) (ServiceStakingNativeToken-flatten.sol#809-845)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Notes: False positive. Zero by design.
INFO:Detectors:
ServiceStakingBase._calculateStakingRewards().ratio (ServiceStakingNativeToken-flatten.sol#699) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

Notes: False positive.
INFO:Detectors:
ServiceStakingBase.stake(uint256) (ServiceStakingNativeToken-flatten.sol#569-636) ignores return value by (stakingDeposit,multisig,hash,agentThreshold,maxNumInstances,state) = IService(serviceRegistry).mapServices(serviceId) (ServiceStakingNativeToken-flatten.sol#582-583)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

Notes: False positive. By code:
```
        if (msg.sender != sInfo.owner) {
            revert OwnerOnly(msg.sender, sInfo.owner);
        }
```
INFO:Detectors:
ServiceStakingBase unstake parameter from is not related to msg.sender IService(serviceRegistry).safeTransferFrom(address(this),msg.sender,serviceId) (ServiceStakingNativeToken-flatten.sol#829)
Reference: https://ventral.digital/posts/2022/8/18/sznsdaos-bountyboard-unauthorized-transferfrom-vulnerability

Notes: False positive. OK by design.
INFO:Detectors:
Function ServiceStakingNativeToken._withdraw(address,uint256) (ServiceStakingNativeToken-flatten.sol#899-909) contains a low level call to a custom address
Reference: https://github.com/pessimistic-io/slitherin/blob/master/docs/call_forward_to_protected.md

Notes: False positive. IService(serviceRegistry).safeTransferFrom this call is safe.
INFO:Detectors:
Reentrancy in ServiceStakingBase.stake(uint256) (ServiceStakingNativeToken-flatten.sol#569-636):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(msg.sender,address(this),serviceId) (ServiceStakingNativeToken-flatten.sol#622)
	State variables written after the call(s):
	- sInfo.multisig = multisig (ServiceStakingNativeToken-flatten.sol#626)
	- sInfo.owner = msg.sender (ServiceStakingNativeToken-flatten.sol#627)
	- sInfo.nonce = nonce (ServiceStakingNativeToken-flatten.sol#629)
	- sInfo.tsStart = block.timestamp (ServiceStakingNativeToken-flatten.sol#630)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Notes: False positive. See above.
INFO:Detectors:
Reentrancy in ServiceStakingBase.stake(uint256) (ServiceStakingNativeToken-flatten.sol#569-636):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(msg.sender,address(this),serviceId) (ServiceStakingNativeToken-flatten.sol#622)
	Event emitted after the call(s):
	- ServiceStaked(serviceId,msg.sender,multisig,nonce) (ServiceStakingNativeToken-flatten.sol#635)
Reentrancy in ServiceStakingBase.unstake(uint256) (ServiceStakingNativeToken-flatten.sol#809-845):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(address(this),msg.sender,serviceId) (ServiceStakingNativeToken-flatten.sol#829)
	Event emitted after the call(s):
	- ServiceUnstaked(serviceId,msg.sender,sInfo.multisig,sInfo.nonce,sInfo.reward,sInfo.tsStart) (ServiceStakingNativeToken-flatten.sol#844)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Notes: False positive. OK by design.
INFO:Detectors:
ServiceStakingBase._calculateStakingRewards() (ServiceStakingNativeToken-flatten.sol#646-717) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - tsCheckpointLast >= livenessPeriod (ServiceStakingNativeToken-flatten.sol#668)
	- ts > serviceCheckpoint (ServiceStakingNativeToken-flatten.sol#692)
	- ts > 0 (ServiceStakingNativeToken-flatten.sol#701)
	- ratio >= livenessRatio (ServiceStakingNativeToken-flatten.sol#706)
ServiceStakingBase.unstake(uint256) (ServiceStakingNativeToken-flatten.sol#809-845) uses timestamp for comparisons
	Dangerous comparisons:
	- msg.sender != sInfo.owner (ServiceStakingNativeToken-flatten.sol#812)
	- sInfo.reward > 0 (ServiceStakingNativeToken-flatten.sol#832)
ServiceStakingBase.calculateServiceStakingReward(uint256) (ServiceStakingNativeToken-flatten.sol#850-879) uses timestamp for comparisons
	Dangerous comparisons:
	- sInfo.tsStart == 0 (ServiceStakingNativeToken-flatten.sol#856)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Notes: False positive. OK by design.
INFO:Detectors:
ERC721._burn(uint256) (ServiceStakingNativeToken-flatten.sol#296-311) is never used and should be removed
ERC721._mint(address,uint256) (ServiceStakingNativeToken-flatten.sol#281-294) is never used and should be removed
ERC721._safeMint(address,uint256) (ServiceStakingNativeToken-flatten.sol#317-326) is never used and should be removed
ERC721._safeMint(address,uint256,bytes) (ServiceStakingNativeToken-flatten.sol#328-341) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Notes: False positive. OK by design.
INFO:Detectors:
Low level call in ServiceStakingNativeToken._withdraw(address,uint256) (ServiceStakingNativeToken-flatten.sol#899-909):
	- (result) = to.call{value: amount}() (ServiceStakingNativeToken-flatten.sol#905)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Notes: False positive. Ignore it.
INFO:Detectors:
Variable ERC721._ownerOf (ServiceStakingNativeToken-flatten.sol#155) is not in mixedCase
Variable ERC721._balanceOf (ServiceStakingNativeToken-flatten.sol#157) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Notes: Low priority.
INFO:Detectors:
Variable ServiceStakingBase.checkpoint().curServiceId_scope_1 (ServiceStakingNativeToken-flatten.sol#774) is too similar to ServiceStakingBase.checkpoint().curServiceId_scope_3 (ServiceStakingNativeToken-flatten.sol#792)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

Notes: False positive. Ignore it.
INFO:Detectors:
ERC721 (ServiceStakingNativeToken-flatten.sol#130-342) does not implement functions:
	- ERC721.tokenURI(uint256) (ServiceStakingNativeToken-flatten.sol#149)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions

Notes: Low priority.
INFO:Detectors:
Function ServiceStakingBase.stake(uint256) (ServiceStakingNativeToken-flatten.sol#569-636) contains magic number: 4
Reference: https://github.com/pessimistic-io/slitherin/blob/master/docs/magic_number.md

Notes: False positive. Non-readonly-reentrancy
INFO:Detectors:
Potential vulnerable to readonly-reentrancy function (if read in other function) ServiceStakingBase.calculateServiceStakingReward(uint256) (ServiceStakingToken-flatten.sol#850-879):
	State variables read that were written after the external call(s):
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at sInfo = mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#852)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at reward = sInfo.reward (ServiceStakingToken-flatten.sol#853)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at sInfo.tsStart == 0 (ServiceStakingToken-flatten.sol#856)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at revert ServiceNotStaked(uint256)(serviceId) (ServiceStakingToken-flatten.sol#857)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at END_IF (ServiceStakingToken-flatten.sol#856-858)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at NEW VARIABLE lastAvailableRewards (ServiceStakingToken-flatten.sol#861)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at NEW VARIABLE numServices (ServiceStakingToken-flatten.sol#861)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at NEW VARIABLE totalRewards (ServiceStakingToken-flatten.sol#861)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at NEW VARIABLE eligibleServiceIds (ServiceStakingToken-flatten.sol#861)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at NEW VARIABLE eligibleServiceRewards (ServiceStakingToken-flatten.sol#862)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at (lastAvailableRewards,numServices,totalRewards,eligibleServiceIds,eligibleServiceRewards) = _calculateStakingRewards() (ServiceStakingToken-flatten.sol#861-862)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at numServices > 0 (ServiceStakingToken-flatten.sol#865)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at BEGIN_LOOP (ServiceStakingToken-flatten.sol#867-877)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at END_LOOP (ServiceStakingToken-flatten.sol#867-877)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at i = 0 (ServiceStakingToken-flatten.sol#867)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at i < eligibleServiceIds.length (ServiceStakingToken-flatten.sol#867)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at eligibleServiceIds[i] == serviceId (ServiceStakingToken-flatten.sol#868)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at totalRewards > lastAvailableRewards (ServiceStakingToken-flatten.sol#870)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at reward += (eligibleServiceRewards[i] * lastAvailableRewards) / totalRewards (ServiceStakingToken-flatten.sol#871)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at reward += eligibleServiceRewards[i] (ServiceStakingToken-flatten.sol#873)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at END_IF (ServiceStakingToken-flatten.sol#870-874)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at BREAK (ServiceStakingToken-flatten.sol#875)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at END_IF (ServiceStakingToken-flatten.sol#868-876)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at ++ i (ServiceStakingToken-flatten.sol#867)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) was read at END_IF (ServiceStakingToken-flatten.sol#865-878)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
			- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
			- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
			- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
			- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at (lastAvailableRewards,numServices,totalRewards,eligibleServiceIds,eligibleServiceRewards) = _calculateStakingRewards() (ServiceStakingToken-flatten.sol#861-862)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at numServices > 0 (ServiceStakingToken-flatten.sol#865)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at BEGIN_LOOP (ServiceStakingToken-flatten.sol#867-877)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at END_LOOP (ServiceStakingToken-flatten.sol#867-877)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at i = 0 (ServiceStakingToken-flatten.sol#867)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at i < eligibleServiceIds.length (ServiceStakingToken-flatten.sol#867)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at eligibleServiceIds[i] == serviceId (ServiceStakingToken-flatten.sol#868)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at totalRewards > lastAvailableRewards (ServiceStakingToken-flatten.sol#870)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at reward += (eligibleServiceRewards[i] * lastAvailableRewards) / totalRewards (ServiceStakingToken-flatten.sol#871)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at reward += eligibleServiceRewards[i] (ServiceStakingToken-flatten.sol#873)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at END_IF (ServiceStakingToken-flatten.sol#870-874)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at BREAK (ServiceStakingToken-flatten.sol#875)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at END_IF (ServiceStakingToken-flatten.sol#868-876)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at ++ i (ServiceStakingToken-flatten.sol#867)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) was read at END_IF (ServiceStakingToken-flatten.sol#865-878)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
			- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
			- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
Reference: https://github.com/pessimistic-io/slitherin/blob/master/docs/readonly_reentrancy.md

Notes: False positive. 
INFO:Detectors:
IToken (ServiceStakingToken-flatten.sol#885-928) has incorrect ERC721 function interface:IToken.approve(address,uint256) (ServiceStakingToken-flatten.sol#916)
IToken (ServiceStakingToken-flatten.sol#885-928) has incorrect ERC721 function interface:IToken.transferFrom(address,address,uint256) (ServiceStakingToken-flatten.sol#923)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc721-interface

Notes: False positive. 
INFO:Detectors:
ServiceStakingBase.calculateServiceStakingReward(uint256) (ServiceStakingToken-flatten.sol#850-879) uses a dangerous strict equality:
	- sInfo.tsStart == 0 (ServiceStakingToken-flatten.sol#856)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Notes: False positive. See above.
INFO:Detectors:
Reentrancy in ServiceStakingBase.stake(uint256) (ServiceStakingToken-flatten.sol#569-636):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(msg.sender,address(this),serviceId) (ServiceStakingToken-flatten.sol#622)
	State variables written after the call(s):
	- setServiceIds.push(serviceId) (ServiceStakingToken-flatten.sol#633)
	ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) can be used in cross function reentrancies:
	- ServiceStakingBase._calculateStakingRewards() (ServiceStakingToken-flatten.sol#646-717)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506)
	- ServiceStakingBase.stake(uint256) (ServiceStakingToken-flatten.sol#569-636)
	- ServiceStakingBase.unstake(uint256) (ServiceStakingToken-flatten.sol#809-845)
Reentrancy in ServiceStakingBase.unstake(uint256) (ServiceStakingToken-flatten.sol#809-845):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(address(this),msg.sender,serviceId) (ServiceStakingToken-flatten.sol#829)
	State variables written after the call(s):
	- delete mapServiceInfo[serviceId] (ServiceStakingToken-flatten.sol#838)
	ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504) can be used in cross function reentrancies:
	- ServiceStakingBase._calculateStakingRewards() (ServiceStakingToken-flatten.sol#646-717)
	- ServiceStakingBase.calculateServiceStakingReward(uint256) (ServiceStakingToken-flatten.sol#850-879)
	- ServiceStakingBase.checkpoint() (ServiceStakingToken-flatten.sol#726-805)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingToken-flatten.sol#504)
	- ServiceStakingBase.stake(uint256) (ServiceStakingToken-flatten.sol#569-636)
	- ServiceStakingBase.unstake(uint256) (ServiceStakingToken-flatten.sol#809-845)
	- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingToken-flatten.sol#841)
	ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) can be used in cross function reentrancies:
	- ServiceStakingBase._calculateStakingRewards() (ServiceStakingToken-flatten.sol#646-717)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506)
	- ServiceStakingBase.stake(uint256) (ServiceStakingToken-flatten.sol#569-636)
	- ServiceStakingBase.unstake(uint256) (ServiceStakingToken-flatten.sol#809-845)
	- setServiceIds.pop() (ServiceStakingToken-flatten.sol#842)
	ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506) can be used in cross function reentrancies:
	- ServiceStakingBase._calculateStakingRewards() (ServiceStakingToken-flatten.sol#646-717)
	- ServiceStakingBase.setServiceIds (ServiceStakingToken-flatten.sol#506)
	- ServiceStakingBase.stake(uint256) (ServiceStakingToken-flatten.sol#569-636)
	- ServiceStakingBase.unstake(uint256) (ServiceStakingToken-flatten.sol#809-845)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Notes: False positive. OK by design.
INFO:Detectors:
ServiceStakingBase._calculateStakingRewards().ratio (ServiceStakingToken-flatten.sol#699) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

Notes: False positive. OK by design.
INFO:Detectors:
ServiceStakingBase.stake(uint256) (ServiceStakingToken-flatten.sol#569-636) ignores return value by (stakingDeposit,multisig,hash,agentThreshold,maxNumInstances,state) = IService(serviceRegistry).mapServices(serviceId) (ServiceStakingToken-flatten.sol#582-583)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

Notes: False positive. OK by design.
INFO:Detectors:
ServiceStakingBase unstake parameter from is not related to msg.sender IService(serviceRegistry).safeTransferFrom(address(this),msg.sender,serviceId) (ServiceStakingToken-flatten.sol#829)
Reference: https://ventral.digital/posts/2022/8/18/sznsdaos-bountyboard-unauthorized-transferfrom-vulnerability

Notes: False positive. See above.
INFO:Detectors:
Reentrancy in ServiceStakingBase.stake(uint256) (ServiceStakingToken-flatten.sol#569-636):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(msg.sender,address(this),serviceId) (ServiceStakingToken-flatten.sol#622)
	State variables written after the call(s):
	- sInfo.multisig = multisig (ServiceStakingToken-flatten.sol#626)
	- sInfo.owner = msg.sender (ServiceStakingToken-flatten.sol#627)
	- sInfo.nonce = nonce (ServiceStakingToken-flatten.sol#629)
	- sInfo.tsStart = block.timestamp (ServiceStakingToken-flatten.sol#630)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Notes: False positive. See above.
INFO:Detectors:
Reentrancy in ServiceStakingBase.stake(uint256) (ServiceStakingToken-flatten.sol#569-636):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(msg.sender,address(this),serviceId) (ServiceStakingToken-flatten.sol#622)
	Event emitted after the call(s):
	- ServiceStaked(serviceId,msg.sender,multisig,nonce) (ServiceStakingToken-flatten.sol#635)
Reentrancy in ServiceStakingBase.unstake(uint256) (ServiceStakingToken-flatten.sol#809-845):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(address(this),msg.sender,serviceId) (ServiceStakingToken-flatten.sol#829)
	Event emitted after the call(s):
	- ServiceUnstaked(serviceId,msg.sender,sInfo.multisig,sInfo.nonce,sInfo.reward,sInfo.tsStart) (ServiceStakingToken-flatten.sol#844)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Notes: False positive. OK by design.
INFO:Detectors:
ServiceStakingBase._calculateStakingRewards() (ServiceStakingToken-flatten.sol#646-717) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - tsCheckpointLast >= livenessPeriod (ServiceStakingToken-flatten.sol#668)
	- ts > serviceCheckpoint (ServiceStakingToken-flatten.sol#692)
	- ts > 0 (ServiceStakingToken-flatten.sol#701)
	- ratio >= livenessRatio (ServiceStakingToken-flatten.sol#706)
ServiceStakingBase.unstake(uint256) (ServiceStakingToken-flatten.sol#809-845) uses timestamp for comparisons
	Dangerous comparisons:
	- msg.sender != sInfo.owner (ServiceStakingToken-flatten.sol#812)
	- sInfo.reward > 0 (ServiceStakingToken-flatten.sol#832)
ServiceStakingBase.calculateServiceStakingReward(uint256) (ServiceStakingToken-flatten.sol#850-879) uses timestamp for comparisons
	Dangerous comparisons:
	- sInfo.tsStart == 0 (ServiceStakingToken-flatten.sol#856)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Notes: False positive. Ignore it.
INFO:Detectors:
SafeTransferLib.safeTransferFrom(address,address,address,uint256) (ServiceStakingToken-flatten.sol#950-981) uses assembly
	- INLINE ASM (ServiceStakingToken-flatten.sol#954-976)
SafeTransferLib.safeTransfer(address,address,uint256) (ServiceStakingToken-flatten.sol#992-1022) uses assembly
	- INLINE ASM (ServiceStakingToken-flatten.sol#996-1017)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Notes: False positive. OK by design
INFO:Detectors:
ERC721._burn(uint256) (ServiceStakingToken-flatten.sol#296-311) is never used and should be removed
ERC721._mint(address,uint256) (ServiceStakingToken-flatten.sol#281-294) is never used and should be removed
ERC721._safeMint(address,uint256) (ServiceStakingToken-flatten.sol#317-326) is never used and should be removed
ERC721._safeMint(address,uint256,bytes) (ServiceStakingToken-flatten.sol#328-341) is never used and should be removed
ServiceStakingBase._checkTokenStakingDeposit(uint256,uint256) (ServiceStakingToken-flatten.sol#555-560) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Notes: False positive. OK by design
INFO:Detectors:
Variable ERC721._ownerOf (ServiceStakingToken-flatten.sol#155) is not in mixedCase
Variable ERC721._balanceOf (ServiceStakingToken-flatten.sol#157) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Notes: low priority
INFO:Detectors:
Variable ServiceStakingBase.checkpoint().curServiceId_scope_1 (ServiceStakingToken-flatten.sol#774) is too similar to ServiceStakingBase.checkpoint().curServiceId_scope_3 (ServiceStakingToken-flatten.sol#792)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

Notes: False positive. OK by design
INFO:Detectors:
SafeTransferLib.safeTransferFrom(address,address,address,uint256) (ServiceStakingToken-flatten.sol#950-981) uses literals with too many digits:
	- mstore(uint256,uint256)(0,0x23b872dd00000000000000000000000000000000000000000000000000000000) (ServiceStakingToken-flatten.sol#959)
SafeTransferLib.safeTransfer(address,address,uint256) (ServiceStakingToken-flatten.sol#992-1022) uses literals with too many digits:
	- mstore(uint256,uint256)(0,0xa9059cbb00000000000000000000000000000000000000000000000000000000) (ServiceStakingToken-flatten.sol#1001)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Notes: False positive. OK by design
INFO:Detectors:
ERC721 (ServiceStakingToken-flatten.sol#130-342) does not implement functions:
	- ERC721.tokenURI(uint256) (ServiceStakingToken-flatten.sol#149)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions

Notes: False positive. OK by design
INFO:Detectors:
Function SafeTransferLib.safeTransferFrom(address,address,address,uint256) (ServiceStakingToken-flatten.sol#950-981) contains magic numbers: 4, 36, 68
Function SafeTransferLib.safeTransfer(address,address,uint256) (ServiceStakingToken-flatten.sol#992-1022) contains magic numbers: 4, 36
Function ServiceStakingBase.stake(uint256) (ServiceStakingToken-flatten.sol#569-636) contains magic number: 4
Reference: https://github.com/pessimistic-io/slitherin/blob/master/docs/magic_number.md

Notes: False positive. See above.
INFO:Detectors:
Potential vulnerable to readonly-reentrancy function (if read in other function) ServiceStakingBase.calculateServiceStakingReward(uint256) (ServiceStakingBase-flatten.sol#846-875):
	State variables read that were written after the external call(s):
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at sInfo = mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#848)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at reward = sInfo.reward (ServiceStakingBase-flatten.sol#849)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at sInfo.tsStart == 0 (ServiceStakingBase-flatten.sol#852)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at revert ServiceNotStaked(uint256)(serviceId) (ServiceStakingBase-flatten.sol#853)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at END_IF (ServiceStakingBase-flatten.sol#852-854)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at NEW VARIABLE lastAvailableRewards (ServiceStakingBase-flatten.sol#857)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at NEW VARIABLE numServices (ServiceStakingBase-flatten.sol#857)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at NEW VARIABLE totalRewards (ServiceStakingBase-flatten.sol#857)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at NEW VARIABLE eligibleServiceIds (ServiceStakingBase-flatten.sol#857)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at NEW VARIABLE eligibleServiceRewards (ServiceStakingBase-flatten.sol#858)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at (lastAvailableRewards,numServices,totalRewards,eligibleServiceIds,eligibleServiceRewards) = _calculateStakingRewards() (ServiceStakingBase-flatten.sol#857-858)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at numServices > 0 (ServiceStakingBase-flatten.sol#861)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at BEGIN_LOOP (ServiceStakingBase-flatten.sol#863-873)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at END_LOOP (ServiceStakingBase-flatten.sol#863-873)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at i = 0 (ServiceStakingBase-flatten.sol#863)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at i < eligibleServiceIds.length (ServiceStakingBase-flatten.sol#863)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at eligibleServiceIds[i] == serviceId (ServiceStakingBase-flatten.sol#864)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at totalRewards > lastAvailableRewards (ServiceStakingBase-flatten.sol#866)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at reward += (eligibleServiceRewards[i] * lastAvailableRewards) / totalRewards (ServiceStakingBase-flatten.sol#867)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at reward += eligibleServiceRewards[i] (ServiceStakingBase-flatten.sol#869)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at END_IF (ServiceStakingBase-flatten.sol#866-870)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at BREAK (ServiceStakingBase-flatten.sol#871)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at END_IF (ServiceStakingBase-flatten.sol#864-872)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at ++ i (ServiceStakingBase-flatten.sol#863)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) was read at END_IF (ServiceStakingBase-flatten.sol#861-874)
		 This variable was written at (after external call):
			- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
			- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
			- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
			- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
			- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at (lastAvailableRewards,numServices,totalRewards,eligibleServiceIds,eligibleServiceRewards) = _calculateStakingRewards() (ServiceStakingBase-flatten.sol#857-858)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at numServices > 0 (ServiceStakingBase-flatten.sol#861)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at BEGIN_LOOP (ServiceStakingBase-flatten.sol#863-873)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at END_LOOP (ServiceStakingBase-flatten.sol#863-873)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at i = 0 (ServiceStakingBase-flatten.sol#863)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at i < eligibleServiceIds.length (ServiceStakingBase-flatten.sol#863)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at eligibleServiceIds[i] == serviceId (ServiceStakingBase-flatten.sol#864)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at totalRewards > lastAvailableRewards (ServiceStakingBase-flatten.sol#866)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at reward += (eligibleServiceRewards[i] * lastAvailableRewards) / totalRewards (ServiceStakingBase-flatten.sol#867)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at reward += eligibleServiceRewards[i] (ServiceStakingBase-flatten.sol#869)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at END_IF (ServiceStakingBase-flatten.sol#866-870)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at BREAK (ServiceStakingBase-flatten.sol#871)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at END_IF (ServiceStakingBase-flatten.sol#864-872)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at ++ i (ServiceStakingBase-flatten.sol#863)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) was read at END_IF (ServiceStakingBase-flatten.sol#861-874)
		 This variable was written at (after external call):
			- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
			- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
			- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
Reference: https://github.com/pessimistic-io/slitherin/blob/master/docs/readonly_reentrancy.md

Notes: False positive. OK by design
INFO:Detectors:
ServiceStakingBase.calculateServiceStakingReward(uint256) (ServiceStakingBase-flatten.sol#846-875) uses a dangerous strict equality:
	- sInfo.tsStart == 0 (ServiceStakingBase-flatten.sol#852)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Notes: False positive. OK by design
INFO:Detectors:
Reentrancy in ServiceStakingBase.stake(uint256) (ServiceStakingBase-flatten.sol#565-632):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(msg.sender,address(this),serviceId) (ServiceStakingBase-flatten.sol#618)
	State variables written after the call(s):
	- setServiceIds.push(serviceId) (ServiceStakingBase-flatten.sol#629)
	ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) can be used in cross function reentrancies:
	- ServiceStakingBase._calculateStakingRewards() (ServiceStakingBase-flatten.sol#642-713)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502)
	- ServiceStakingBase.stake(uint256) (ServiceStakingBase-flatten.sol#565-632)
	- ServiceStakingBase.unstake(uint256) (ServiceStakingBase-flatten.sol#805-841)
Reentrancy in ServiceStakingBase.unstake(uint256) (ServiceStakingBase-flatten.sol#805-841):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(address(this),msg.sender,serviceId) (ServiceStakingBase-flatten.sol#825)
	State variables written after the call(s):
	- delete mapServiceInfo[serviceId] (ServiceStakingBase-flatten.sol#834)
	ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) can be used in cross function reentrancies:
	- ServiceStakingBase._calculateStakingRewards() (ServiceStakingBase-flatten.sol#642-713)
	- ServiceStakingBase.calculateServiceStakingReward(uint256) (ServiceStakingBase-flatten.sol#846-875)
	- ServiceStakingBase.checkpoint() (ServiceStakingBase-flatten.sol#722-801)
	- ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500)
	- ServiceStakingBase.stake(uint256) (ServiceStakingBase-flatten.sol#565-632)
	- ServiceStakingBase.unstake(uint256) (ServiceStakingBase-flatten.sol#805-841)
	- setServiceIds[idx] = setServiceIds[setServiceIds.length - 1] (ServiceStakingBase-flatten.sol#837)
	ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) can be used in cross function reentrancies:
	- ServiceStakingBase._calculateStakingRewards() (ServiceStakingBase-flatten.sol#642-713)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502)
	- ServiceStakingBase.stake(uint256) (ServiceStakingBase-flatten.sol#565-632)
	- ServiceStakingBase.unstake(uint256) (ServiceStakingBase-flatten.sol#805-841)
	- setServiceIds.pop() (ServiceStakingBase-flatten.sol#838)
	ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502) can be used in cross function reentrancies:
	- ServiceStakingBase._calculateStakingRewards() (ServiceStakingBase-flatten.sol#642-713)
	- ServiceStakingBase.setServiceIds (ServiceStakingBase-flatten.sol#502)
	- ServiceStakingBase.stake(uint256) (ServiceStakingBase-flatten.sol#565-632)
	- ServiceStakingBase.unstake(uint256) (ServiceStakingBase-flatten.sol#805-841)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Notes: False positive. OK by design
INFO:Detectors:
ServiceStakingBase._calculateStakingRewards().ratio (ServiceStakingBase-flatten.sol#695) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

Notes: False positive. OK by design
INFO:Detectors:
ServiceStakingBase.stake(uint256) (ServiceStakingBase-flatten.sol#565-632) ignores return value by (stakingDeposit,multisig,hash,agentThreshold,maxNumInstances,state) = IService(serviceRegistry).mapServices(serviceId) (ServiceStakingBase-flatten.sol#578-579)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
ServiceStakingBase unstake parameter from is not related to msg.sender IService(serviceRegistry).safeTransferFrom(address(this),msg.sender,serviceId) (ServiceStakingBase-flatten.sol#825)
Reference: https://ventral.digital/posts/2022/8/18/sznsdaos-bountyboard-unauthorized-transferfrom-vulnerability

Notes: False positive. See above
INFO:Detectors:
Reentrancy in ServiceStakingBase.stake(uint256) (ServiceStakingBase-flatten.sol#565-632):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(msg.sender,address(this),serviceId) (ServiceStakingBase-flatten.sol#618)
	State variables written after the call(s):
	- sInfo.multisig = multisig (ServiceStakingBase-flatten.sol#622)
	- sInfo.owner = msg.sender (ServiceStakingBase-flatten.sol#623)
	- sInfo.nonce = nonce (ServiceStakingBase-flatten.sol#625)
	- sInfo.tsStart = block.timestamp (ServiceStakingBase-flatten.sol#626)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Notes: False positive. See above
INFO:Detectors:
Reentrancy in ServiceStakingBase.stake(uint256) (ServiceStakingBase-flatten.sol#565-632):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(msg.sender,address(this),serviceId) (ServiceStakingBase-flatten.sol#618)
	Event emitted after the call(s):
	- ServiceStaked(serviceId,msg.sender,multisig,nonce) (ServiceStakingBase-flatten.sol#631)

Notes: False positive. See above
Reentrancy in ServiceStakingBase.unstake(uint256) (ServiceStakingBase-flatten.sol#805-841):
	External calls:
	- IService(serviceRegistry).safeTransferFrom(address(this),msg.sender,serviceId) (ServiceStakingBase-flatten.sol#825)
	Event emitted after the call(s):
	- ServiceUnstaked(serviceId,msg.sender,sInfo.multisig,sInfo.nonce,sInfo.reward,sInfo.tsStart) (ServiceStakingBase-flatten.sol#840)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Notes: False positive. OK by design
INFO:Detectors:
ServiceStakingBase._calculateStakingRewards() (ServiceStakingBase-flatten.sol#642-713) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - tsCheckpointLast >= livenessPeriod (ServiceStakingBase-flatten.sol#664)
	- ts > serviceCheckpoint (ServiceStakingBase-flatten.sol#688)
	- ts > 0 (ServiceStakingBase-flatten.sol#697)
	- ratio >= livenessRatio (ServiceStakingBase-flatten.sol#702)
ServiceStakingBase.unstake(uint256) (ServiceStakingBase-flatten.sol#805-841) uses timestamp for comparisons
	Dangerous comparisons:
	- msg.sender != sInfo.owner (ServiceStakingBase-flatten.sol#808)
	- sInfo.reward > 0 (ServiceStakingBase-flatten.sol#828)
ServiceStakingBase.calculateServiceStakingReward(uint256) (ServiceStakingBase-flatten.sol#846-875) uses timestamp for comparisons
	Dangerous comparisons:
	- sInfo.tsStart == 0 (ServiceStakingBase-flatten.sol#852)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Notes: False positive. Ignore it.
INFO:Detectors:
ERC721._burn(uint256) (ServiceStakingBase-flatten.sol#292-307) is never used and should be removed
ERC721._mint(address,uint256) (ServiceStakingBase-flatten.sol#277-290) is never used and should be removed
ERC721._safeMint(address,uint256) (ServiceStakingBase-flatten.sol#313-322) is never used and should be removed
ERC721._safeMint(address,uint256,bytes) (ServiceStakingBase-flatten.sol#324-337) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Notes: False positive. Ignore it.
INFO:Detectors:
Variable ERC721._ownerOf (ServiceStakingBase-flatten.sol#151) is not in mixedCase
Variable ERC721._balanceOf (ServiceStakingBase-flatten.sol#153) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Notes: low priority
INFO:Detectors:
Variable ServiceStakingBase.checkpoint().curServiceId_scope_1 (ServiceStakingBase-flatten.sol#770) is too similar to ServiceStakingBase.checkpoint().curServiceId_scope_3 (ServiceStakingBase-flatten.sol#788)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

Notes: False positive. OK by design
INFO:Detectors:
ERC721 (ServiceStakingBase-flatten.sol#126-338) does not implement functions:
	- ERC721.tokenURI(uint256) (ServiceStakingBase-flatten.sol#145)
ServiceStakingBase (ServiceStakingBase-flatten.sol#441-876) does not implement functions:
	- ServiceStakingBase._withdraw(address,uint256) (ServiceStakingBase-flatten.sol#561)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions

Notes: low priority
INFO:Detectors:
Function ServiceStakingBase.stake(uint256) (ServiceStakingBase-flatten.sol#565-632) contains magic number: 4
Reference: https://github.com/pessimistic-io/slitherin/blob/master/docs/magic_number.md

Notes: False positive. Wrong.
INFO:Detectors:
ServiceStakingBase.balance (ServiceStakingBase-flatten.sol#492) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

Notes: False positive. 
INFO:Detectors:
In a function ServiceStakingBase.stake(uint256) (ServiceStakingBase-flatten.sol#565-632) variable ServiceStakingBase.agentIds (ServiceStakingBase-flatten.sol#498) is read multiple times
In a function ServiceStakingBase.stake(uint256) (ServiceStakingBase-flatten.sol#565-632) variable ServiceStakingBase.serviceRegistry (ServiceStakingBase-flatten.sol#489) is read multiple times
In a function ServiceStakingBase.checkpoint() (ServiceStakingBase-flatten.sol#722-801) variable ServiceStakingBase.mapServiceInfo (ServiceStakingBase-flatten.sol#500) is read multiple times
Reference: https://github.com/pessimistic-io/slitherin/blob/master/docs/multiple_storage_read.md
INFO:Slither:. analyzed (23 contracts with 108 detectors), 89 result(s) found
